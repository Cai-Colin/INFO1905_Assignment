package passwordmanager;

import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import doublehashmap.DoubleHashMap;

public class PasswordManagerTest {

	@Test
	public void printHashCollisions(String pathToFile) throws FileNotFoundException, IOException  {
		
		DoubleHashMap<Long, List<String>> map = new DoubleHashMap<Long, List<String>>(1, 50000, 56897);
        PasswordManager spm = new PasswordManager();
        
        BufferedReader br = new BufferedReader(new FileReader(pathToFile));
        
        int collisions = 0;
        
        try 
        {
            String line = br.readLine();
            while (line != null) 
            {
                String password = line.trim();
                Long passwordHash = spm.hash(password);

                if (map.get(passwordHash) == null)
                {
                	map.put(passwordHash, new ArrayList<String>());
                }
                else
                {
                	map.get(passwordHash).add(password);
                }
                // TODO: if passwordHash is in a, add password to its list value
                // else, instantiate a new ArrayList and add password to it
                
                line = br.readLine();
			}
		} 
        finally 
        {
            br.close();
        }  
        List<Long> hashes = map.keys();
        for (Long hash : hashes)
        {
        	List<String> passwords = map.get(hash);
        	if (passwords.size() > 1)
            {
        		collisions += passwords.size();
            }
        }
	}

}
